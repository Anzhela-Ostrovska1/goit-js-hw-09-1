{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBAK3C,SAASG,EAAYC,GAEnB,OADAA,EAAQN,EAAWM,MACZC,SAASD,E,CAkClB,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjDAT,SAASC,cAAc,SAE/BgB,iBAAiB,UAOtB,SAAwBC,GACtBA,EAAMC,iBACN,MAAMC,EAAiBd,SAASJ,EAAeG,OACzCgB,EAAcf,SAASH,EAAYE,OAEzC,IAAK,IAAIiB,EAAI,EAAGA,EAAID,EAAaC,IAAK,CACpC,MAAMC,EAAWD,EAAI,EACfE,EAAQpB,IAAgBgB,EAAiBE,EAE/Cf,EAAcgB,EAAUC,GACrBC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAW,CAE/CoB,QAAS,KAEZ,IAGFC,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoBvB,QAAiBC,MAAW,CAE9CoB,QAAS,KAEZ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepDelayInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromises);\n\nfunction delayValue1(value) {\n  value = delayInput.value;\n  return parseInt(value);\n}\n\nfunction createPromises(event) {\n  event.preventDefault();\n  const stepDelayValue = parseInt(stepDelayInput.value);\n  const amountValue = parseInt(amountInput.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    const position = i + 1;\n    const delay = delayValue1() + stepDelayValue * i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n          }\n        );\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n          }\n        );\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// для 1 промиса код должен исполнится через delay времени (amount[0], через сетТаймаут исполнить )\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepDelayInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$delayValue1","value","parseInt","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","stepDelayValue","amountValue","i","position1","delay1","then","$parcel$interopDefault","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.5580cada.js.map"}